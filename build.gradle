plugins {
    id "java"
}

sourceCompatibility = JavaVersion.toVersion(project.java_version)
targetCompatibility = JavaVersion.toVersion(project.java_version)

archivesBaseName = "backuper"
group = "io.github.evercraftmc"
version = project.project_version

repositories {
    mavenCentral()
}

subprojects {
    group = "io.github.evercraftmc.backuper"

    repositories {
        mavenCentral()
	    maven { url "https://jitpack.io" }
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = JavaVersion.toVersion(project.java_version)
        targetCompatibility = JavaVersion.toVersion(project.java_version)

        options.encoding = "UTF-8"
    }
}

build {
    project(":Shared").getTasksByName("jar", false)
}

import java.nio.file.Files
import java.nio.file.Paths

tasks.register("upload") {
    dependsOn subprojects.collect { it.tasks.build }

    doLast {
        def path = System.getenv("EVERCRAFT_PATH")
        def servers = System.getenv("EVERCRAFT_SERVERS").split(";")

        servers.each() {
            def server = it

            if ((System.getProperty("type") == null || System.getProperty("type").equalsIgnoreCase(server.split(":")[1])) && findProject(":" + server.split(":")[1]) != null) {
                file(Paths.get(path + server.split(":")[0] + server.split(":")[2])).listFiles().each() {
                    if (it.getName().startsWith("Backuper-") && it.getName().endsWith(".jar")) {
                        it.delete()
                    }
                }

                Files.copy(project(":" + server.split(":")[1]).tasks.fatJar.outputs.files[0].toPath(), Paths.get(path + server.split(":")[0] + server.split(":")[2] + "/Backuper-" + project(":" + server.split(":")[1]).tasks.fatJar.outputs.files[0].getName().replace("-fat", "")))
            }
        }
    }
}